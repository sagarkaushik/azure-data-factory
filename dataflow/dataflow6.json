{
	"name": "dataflow6",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Dim_Company_Table",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          avgTotalVolume as integer,",
				"          calculationPrice as string,",
				"          change as double,",
				"          changePercent as double,",
				"          close as string,",
				"          closeSource as string,",
				"          closeTime as string,",
				"          companyName as string,",
				"          currency as string,",
				"          delayedPrice as string,",
				"          delayedPriceTime as string,",
				"          extendedChange as string,",
				"          extendedChangePercent as string,",
				"          extendedPrice as string,",
				"          extendedPriceTime as string,",
				"          high as string,",
				"          highSource as string,",
				"          highTime as string,",
				"          iexAskPrice as integer,",
				"          iexAskSize as integer,",
				"          iexBidPrice as integer,",
				"          iexBidSize as integer,",
				"          iexClose as double,",
				"          iexCloseTime as integer,",
				"          iexLastUpdated as integer,",
				"          iexMarketPercent as double,",
				"          iexOpen as double,",
				"          iexOpenTime as integer,",
				"          iexRealtimePrice as double,",
				"          iexRealtimeSize as integer,",
				"          iexVolume as integer,",
				"          lastTradeTime as integer,",
				"          latestPrice as double,",
				"          latestSource as string,",
				"          latestTime as string,",
				"          latestUpdate as integer,",
				"          latestVolume as string,",
				"          low as string,",
				"          lowSource as string,",
				"          lowTime as string,",
				"          marketCap as integer,",
				"          oddLotDelayedPrice as string,",
				"          oddLotDelayedPriceTime as string,",
				"          open as string,",
				"          openTime as string,",
				"          openSource as string,",
				"          peRatio as double,",
				"          previousClose as double,",
				"          previousVolume as integer,",
				"          primaryExchange as string,",
				"          symbol as string,",
				"          volume as string,",
				"          week52High as double,",
				"          week52Low as double,",
				"          ytdChange as double,",
				"          isUSMarketOpen as boolean,",
				"          exchange as string,",
				"          industry as string,",
				"          website as string,",
				"          description as string,",
				"          CEO as string,",
				"          securityName as string,",
				"          issueType as string,",
				"          sector as string,",
				"          primarySicCode as integer,",
				"          employees as integer,",
				"          tags as string[],",
				"          address as string,",
				"          address2 as string,",
				"          state as string,",
				"          city as string,",
				"          zip as string,",
				"          country as string,",
				"          phone as string,",
				"          effectiveIntegrationRuntime as string,",
				"          executionDuration as integer,",
				"          durationInQueue as (integrationRuntimeQueue as integer),",
				"          billingReference as (activityType as string, billableDuration as (meterType as string, duration as double, unit as string)[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source2",
				"source2 alterRow(upsertIf(1 ==1 )) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          symbol as string,",
				"          longName as string,",
				"          address1 as string,",
				"          city as string,",
				"          state_name as string,",
				"          zip as string,",
				"          country as string,",
				"          phone as string,",
				"          website as string,",
				"          industry as string,",
				"          fullTimeEmployees as string,",
				"          longBusinessSummary as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['symbol'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          symbol,",
				"          longName = companyName,",
				"          address1 = address,",
				"          city,",
				"          state_name = state,",
				"          zip,",
				"          country,",
				"          phone,",
				"          website,",
				"          industry,",
				"          fullTimeEmployees = employees",
				"     )) ~> sink1"
			]
		}
	}
}
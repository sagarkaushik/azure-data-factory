{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "raw_dept_data",
						"type": "DatasetReference"
					},
					"name": "deptdata"
				},
				{
					"dataset": {
						"referenceName": "raw_emp_data",
						"type": "DatasetReference"
					},
					"name": "empdata"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "shippingdeptdata"
				},
				{
					"name": "innerjoin"
				},
				{
					"name": "derivingfullname"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DEPARTMENT_ID as string,",
				"          DEPARTMENT_NAME as string,",
				"          MANAGER_ID as string,",
				"          LOCATION_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> deptdata",
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empdata",
				"deptdata filter(equals(DEPARTMENT_ID, '50')) ~> shippingdeptdata",
				"empdata, shippingdeptdata join(empdata@DEPARTMENT_ID == deptdata@DEPARTMENT_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> innerjoin",
				"innerjoin derive({Full Name} = concat(FIRST_NAME,' ' , LAST_NAME)) ~> derivingfullname"
			]
		}
	}
}